//lexer
        "      "
        ~
        ""
        ''
        <
        >
        |
        cat <<<
        cat >>>
        cat > || ls
        cat ><
        cat <>
        | ls
        ls |
        cat <
        cat >
        cat <| file.txt
        echo 'unclosed
        echo \"unclosed2
        echo 'hello"world'hi"
        echo >| file

        echo ">>>"
        echo "<>"
        echo "ls |"
        echo '">>>"'
        echo "'h'"
        echo hello world
        echo hello | grep h > out.txt
        ls -l | grep .c >> result.txt

//tokenizer
        "      "
        ~
        ""
        ''
        <
        >
        |
        cat <<<
        cat >>>
        cat > || ls
        cat ><
        cat <>
        | ls
        ls |
        cat <
        cat >
        cat <| file.txt
        echo 'unclosed
        echo \"unclosed2
        echo 'hello"world'hi"

        echo ">>>"
        echo "<>"
        echo "ls |"
        echo '">>>"'
        echo "'h'"
        echo >| file
        echo hello world,
        echo hello | grep h > out.txt
        ls -l | grep .c >> result.txt
        cat < infile
        echo hello > outfile
        grep hi >> log
            cat << EOF
        ls | wc -l
            ls    -l     /tmp
        cat << EOF | grep "pattern" > result.txt

//parser
        ls
        pwd
        cat Makefile
        echo hello world
	    ls -l | grep c
		cat < infile > outfile
	    echo a >> file | grep a
		echo 'hello"world'hi
        echo ">>>"
        echo "<>"
        echo "ls |"
        echo '>>>'
		echo "|"
		echo hello>file
		cat<infile|grep
		echo    >    outfile
        ""''echo Nola""'''' que""'' tal""''
        "e"'c'ho 'b'"o"nj"o"'u'r
        echo hello | grep h > out.txt
        ls -l | grep .c >> result.txt
        ls | wc -l
        cat /etc/passwd | grep root
        echo bonjour | cat | cat | cat
        cat < infile | grep something | wc -l
        ls -l | grep txt | awk '{print $1}' 
        ls | wc
        date | cat -e
        echo " " | cat -e
        echo "hola " | cat -e
        echo $:$= | cat -e
        echo | cat -e
        echo "a" "b" "c" | cat -e
        echo hello world | wc -w
        echo a | grep b | wc -l | sort > result.txt 
        < hello > world echo // 
        >hello<world echo //


        //speciale
        unset HOME 之后 用cd 不能回到home, 但是用cd ~ 可以回到home

        env -i ./minishell 会有很多环境变量没有但是应该能启动

        bonbon@DESKTOP-LVSH144:~/minishell_new/new$ << OK << KO << KK cat (minishell 退出有 leak)
        > ls
        > KO
        > asdf
        > OK
        > KO
        > 1
        > KK
        1
        

        < testfile cat 重定向in功能不正常，似乎是起到out的作用
        < testfile cat > out.txt   可行但是  < testfile cat | cat 不可行（很可能和fork两次有关系）
        


        echo -n > file1 > file2 > file3 << OK 

        CMD: echo -n
        REDIR: > file1 > file2 > file3 << OK   先做heredoc, 生成临时文件之后，再按顺序做所有文件重定向



		"      "//
        "echo       "//
        "echo     a     b"//
        ""echo      ""//
        ~
        ""
        ''
        <
        >
        |
        cat <<<
        cat >>>
        cat > || ls
        cat ><
        cat <>
        | ls
        ls |
        cat <
        cat >
        cat <| file.txt
        echo 'unclosed
        echo \"unclosed2
        echo 'hello"world'hi"
        echo < < >>
        echo < < hello
        echo << >>
        >> >> >> >>
        >>>>>
        >>>>>>>>>>>>>>>
        <<<<<
        <<<<<<<<<<<<<<<< 
        > > > >
        >>>> >> >> >>
        >>|><
        echo > <
        echo | |
        cat < infile > outfile |
        cat < infile > | grep
        echo hello | | grep e
        ls\t-l//
        < hello echo > world
        echo ">""
        echo "'h'""
        echo '>'"
        echo '|'"
        echo '<infile'"
        echo 'a >> file'"
        echo '>' > file"
        echo '|' | cat"
        echo "hellonworld""
        echo <<EOF"

//expansion
        $?//
        echo $? //
        echo $HOME
        echo $USER
        echo $SHELL
        echo ~
        echo "~"
        echo ${USER}
        echo '$HOME'
        echo "$HOME"
        echo '"$HOME"'
        echo "'$HOME'"

        echo pre$USERpost
        echo pre$USER$post
        echo pre$USER*post
        echo pre$USER~post
        echo pre$USER#post
        echo pre$USER@post
        echo pre$USER%post
        echo pre$USER^post
        echo pre$USER-post
        echo pre$USER+post
        echo pre$USER=post
        echo pre$USER[post
        echo pre$USER]post
        echo pre$USER{post
        echo pre$USER}post
        echo pre$USER\post
        echo pre$USER/post
        echo pre$USER?post
        echo pre$USER,post
        echo pre$USER.post
        echo pre$USER:post
        echo pre$USER post

        echo pre$USER'post
        echo pre$USER"post
        echo pre$USER(post
        echo pre$USER)post
        echo pre$USER`post
        echo pre$USER!post
        echo pre$USER&post
    echo pre$USER|post
    echo pre$USER<post
    echo pre$USER>post

        echo $HOME$USER
        echo $USER+$HOME
        
        echo $UNDEFINED
        
        //builtin ensemble
            export EMPTY=
            echo $EMPTY

            export SPACES="   "
            echo $SPCES
            

            export NAME=BONbon
            echo $NAME

            unset NAME
            echo $NAME

            export 1A=abc //
            export =abc //
            env

            //
            export B
            env
            export

            export B=
            env
            export 

//expansion heredoc
        cat << EOF
        hello
        $HOME
        $USER+$HOME
        "$HOME"
        '$HOME'
        echo ~
        ~
        EOF

        cat << 'EOF'
        hello
        $USER is here.
        $HOME
        $USER+$HOME
        "$HOME"
        '$HOME'
        EOF

        cat << "EOF"
        hello
        HOME is "$HOME"
        $USER is here.
        $HOME
        $USER+$HOME
        "$HOME"
        '$HOME'
        EOF

        false
        cat << EOF
        $HOME
        $USER
        $SHELL
        $?
        ~
        echo ~
        ${USER}
        $HOME$USER
        $USER+$HOME
        EOF

        cat << EOF
        '$HOME'
        "$HOME"
        '"$HOME"'
        "'$HOME'"
        This is 'quoted' and "double quoted"
        EOF

        cat << EOF
        pre$USERpost
        pre$USER$post
        pre$USER post
        EOF

        cat << EOF
        $UNDEFINED
        EOF
        
        cat << EOF > out.txt
        heredoc with redirection.
        EOF
        cat out.txt

        cat << EOF | grep hello
        hello
        world
        hello my world, hello
        EOF

        cat << EOF | grep "bonjour" > bonjour.txt
        bonjour le monde
        hello world
        bonjour encore
        EOF
        cat bonjour.txt

        cat << EOF
        Still typing...
        (no EOF)  
        # 你可以试着只输入 Ctrl+D 看是否能正确中断->退出minishell程序
        # 你可以试着只输入 Ctrl+C 看是否能正确中断->回到新的prompt，需要把这一轮的free, 任何情况下都能回到新的prompt
        # 你可以试着只输入 Ctrl+\ 看是否能正确中断->1]    29900 quit       ./minishell   打断正在运行的命令，但是不能退出minishell


        cat << EOF > /invalid/path/out.txt
        Should fail
        EOF
        # /invalid/path/out.txt: No such file or directory

        cat << EOF > config.ini
        [User]
        Name = $USER
        Home = $HOME

        [Meta]
        Version = 1.0
        EOF
        cat config.ini

        //builtin ensemble
            export EMPTY=
            cat << EOF
            This is $UNSET and this is $EMPTY.
            EOF

            export SPACES="   "
            cat << EOF
            There are $SPCES.
            EOF

            export NAME=BONbon
            cat << EOF
            hi, $NAME
            EOF

            export 1A=abc
            export =abc
            env

        

